<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myproject.repository.ReviewMapper">
    <select id="count" resultType="int">
        SELECT count(*) FROM reviews WHERE pno = #{pno}
    </select>

    <select id="avg_rating" parameterType="int" resultType="double">
        <!-- 기대한 값이 null 일 경우 0.0으로 반환 -->
        SELECT ROUND(COALESCE(avg(rating), 0.0), 1) AS rating_avg FROM reviews WHERE pno = #{pno};
    </select>

    <select id="selectAll" parameterType="int" resultType="Review">
        SELECT rno, r.pno, r.uno, rating, u.givenName, u.familyName, title, comment, r.created, r.updated, up, down
        FROM reviews r LEFT JOIN users u ON r.uno = u.uno
        WHERE pno = #{pno} ORDER BY rno DESC
    </select>

    <select id="selectPage" parameterType="map" resultType="Review">
        SELECT rno, r.pno, r.uno, rating, u.givenName, u.familyName, title, comment, r.created, r.updated, up, down
        FROM reviews r LEFT JOIN users u ON r.uno = u.uno
        WHERE pno = #{pno} ORDER BY rno DESC LIMIT #{pageSize} OFFSET #{offset};
    </select>

    <select id="select" parameterType="map" resultType="Review">
        SELECT * FROM reviews WHERE uno = #{uno} AND pno = #{pno}
    </select>

    <select id="selectByRno" parameterType="int" resultType="Review">
        SELECT * FROM reviews WHERE rno = #{rno}
    </select>

    <insert id="insert" parameterType="Review">
        INSERT INTO reviews (pno, uno, title, comment, rating, up, down, created, updated)
        VALUES (#{pno}, #{uno}, #{title}, #{comment}, #{rating}, 0, 0, current_timestamp, current_timestamp);
    </insert>

    <update id="update" parameterType="Review">
        UPDATE reviews SET title = #{title}, comment = #{comment}, updated = current_timestamp
        WHERE uno = #{uno}
    </update>

    <update id="upDown_calc" parameterType="map">
        <!-- 사용자가 전달한 'help' 값에 따라 동적으로 업데이트할 열 선택 -->
        <choose>
            <when test="help == 'up'">
                UPDATE reviews SET up = up + 1 WHERE rno = #{rno}
            </when>
            <when test="help == 'down'">
                UPDATE reviews SET down = down + 1 WHERE rno = #{rno}
            </when>
        </choose>
    </update>

    <delete id="delete" parameterType="map">
        DELETE FROM reviews WHERE pno = #{pno} AND uno = #{uno}
    </delete>

    <delete id="deleteAll">
        TRUNCATE TABLE reviews
    </delete>
</mapper>